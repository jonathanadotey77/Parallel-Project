@article{CONG201623,
title = {Multi-period mean–variance portfolio optimization based on Monte-Carlo simulation},
journal = {Journal of Economic Dynamics and Control},
volume = {64},
pages = {23-38},
year = {2016},
issn = {0165-1889},
doi = {https://doi.org/10.1016/j.jedc.2016.01.001},
url = {https://www.sciencedirect.com/science/article/pii/S0165188916000026},
author = {F. Cong and C.W. Oosterlee},
keywords = {Dynamic portfolio management, Mean–variance optimization, Constrained optimization, Simulation method, Least squares regression},
abstract = {We propose a simulation-based approach for solving the constrained dynamic mean–variance portfolio management problem. For this dynamic optimization problem, we first consider a sub-optimal strategy, called the multi-stage strategy, which can be utilized in a forward fashion. Then, based on this fast yet sub-optimal strategy, we propose a backward recursive programming approach to improve it. We design the backward recursion algorithm such that the result is guaranteed to converge to a solution, which is at least as good as the one generated by the multi-stage strategy. In our numerical tests, highly satisfactory asset allocations are obtained for dynamic portfolio management problems with realistic constraints on the control variables.}
}

@book{bauer1994genetic,
  title={Genetic Algorithms and Investment Strategies},
  author={Bauer, R.J.},
  isbn={9780471576792},
  lccn={lc93011984},
  series={Wiley Finance},
  url={https://books.google.com/books?id=4pbxEIDyQzUC},
  year={1994},
  publisher={Wiley}
}

@article{xiang2010MPI,
author = {Tian, Xiang and Benkrid, Khaled},
title = {High-Performance Quasi-Monte Carlo Financial Simulation: FPGA vs. GPP vs. GPU},
year = {2010},
issue_date = {November 2010},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {3},
number = {4},
issn = {1936-7406},
url = {https://doi.org/10.1145/1862648.1862656},
doi = {10.1145/1862648.1862656},
abstract = {Quasi-Monte Carlo simulation is a special Monte Carlo simulation method that uses quasi-random or low-discrepancy numbers as random sample sets. In many applications, this method has proved advantageous compared to the traditional Monte Carlo simulation method, which uses pseudo-random numbers, thanks to its faster convergence and higher level of accuracy. This article presents the design and implementation of a massively parallelized Quasi-Monte Carlo simulation engine on an FPGA-based supercomputer, called Maxwell. It also compares this implementation with equivalent graphics processing units (GPUs) and general purpose processors (GPP)-based implementations. The detailed comparison between these three implementations (FPGA vs. GPP vs. GPU) is done in the context of financial derivatives pricing based on our Quasi-Monte Carlo simulation engine. Real hardware implementations on the Maxwell machine show that FPGAs outperform equivalent GPP-based software implementations by 2 orders of magnitude, with the speed-up figure scaling linearly with the number of processing nodes used (FPGAs/GPPs). The same implementations show that FPGAs achieve a ~ 3x speedup compared to equivalent GPU-based implementations. Power consumption measurements also show FPGAs to be 336x more energy efficient than CPUs, and 16x more energy efficient than GPUs.},
journal = {ACM Trans. Reconfigurable Technol. Syst.},
month = {nov},
articleno = {26},
numpages = {22},
keywords = {option pricing, Maxwell, CPU, Quasi-Monte Carlo simulations, GPU, FPGA}
}

